---
import '@/styles/tailwind.css'
import '@/styles/nprogress.css'
import Navbar from '@/components/navbar.astro'
import { ViewTransitions } from 'astro:transitions'
import Analytics from '@vercel/analytics/astro';

interface Props {
	title: string
}

const { title } = Astro.props
---

<html
	lang="en"
	class="scroll-pt-[calc(theme('spacing.16')+theme('spacing.2'))] [&_*]:!transition-none"
	transition:name="none"
>
	<head>
		<meta charset="utf-8" />
		<link
			rel="icon"
			type="image/x-icon"
			href="/favicon.ico"
		/>
		<meta
			name="viewport"
			content="width=device-width"
		/>
		<meta
			name="generator"
			content={Astro.generator}
		/>
		<link
			rel="sitemap"
			href="/sitemap-index.xml"
		/>
		<link
			href="/pagefind/pagefind-ui.css"
			rel="stylesheet"
		/>
		<script
			is:inline
			src="/pagefind/pagefind-ui.js"
		></script>
		<ViewTransitions fallback="swap" />
		<title>{title}</title>
		<Analytics />
	</head>
	<body class="!mr-[var(--removed-body-scroll-bar-size,'0px')]">
		<Navbar
			class="fixed left-0 right-0 top-0 !mr-[var(--removed-body-scroll-bar-size,'0px')] h-16"
		/>
		<slot />
		<script>
			import NProgress from 'nprogress'

			NProgress.configure({
				showSpinner: false,
			})

			document.addEventListener('astro:before-preparation', () => {
				NProgress.start()
			})

			document.addEventListener('astro:page-load', () => {
				NProgress.done()
			})
		</script>
		<script is:inline>
			function getThemePreference() {
				const key = 'keystatic-color-scheme'

				if (typeof localStorage !== 'undefined' && localStorage.getItem(key)) {
					const theme = localStorage.getItem(key)
					if (theme !== 'auto') return theme
				}

				return window.matchMedia('(prefers-color-scheme: dark)').matches
					? 'dark'
					: 'light'
			}

			function setDarkMode(document) {
				const isDark = getThemePreference() === 'dark'
				document.documentElement.classList[isDark ? 'add' : 'remove']('dark')
			}

			setDarkMode(document)

			document.addEventListener('astro:before-swap', (ev) => {
				setDarkMode(ev.newDocument)
			})
		</script>
	</body>
</html>
